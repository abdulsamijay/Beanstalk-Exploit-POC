// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.10;

import "forge-std/Test.sol";
import "./FlashloanBase.sol";
import "../utils/TokenAddresses.sol";
import "../interfaces/ICurve.sol";
import "../interfaces/IUniswapV2Pair.sol";
import "../interfaces/IUniswapV3Pool.sol";
import "../interfaces/IBeanStalk.sol";

interface IUSDT {
    function approve(address _spender, uint256 _value) external;
}

contract BeanExploit is
    FlashLoanReceiverBase(
        ILendingPoolAddressesProvider(
            0xB53C1a33016B2DC2fF3653530bfF1848a515c8c5
        )
    ),
    IUniswapV2Callee,
    TokenAddresses
{
    function uniswapV2Call(
        address sender,
        uint256 amount0,
        uint256 amount1,
        bytes calldata data
    ) external override {}

    function executeOperation(
        address[] calldata assets,
        uint256[] calldata amounts,
        uint256[] calldata premiums,
        address initiator,
        bytes calldata params
    ) external override returns (bool) {}
}
